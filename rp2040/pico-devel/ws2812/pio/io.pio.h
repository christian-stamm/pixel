// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------ //
// ws2812 //
// ------ //

#define ws2812_wrap_target 0
#define ws2812_wrap 11

#define ws2812_T1 5
#define ws2812_T2 9
#define ws2812_T3 5
#define ws2812_NUM_PORTS 2
#define ws2812_NUM_LANES 16

static const uint16_t ws2812_program_instructions[] = {
            //     .wrap_target
    0xa00b, //  0: mov    pins, !null     side 0     
    0xb042, //  1: nop                    side 2     
    0xa042, //  2: nop                    side 0     
    0xa942, //  3: nop                    side 1 [1] 
    0x6010, //  4: out    pins, 16        side 0     
    0xb042, //  5: nop                    side 2     
    0x6030, //  6: out    x, 16           side 0     
    0xad42, //  7: nop                    side 1 [5] 
    0xa003, //  8: mov    pins, null      side 0     
    0xb042, //  9: nop                    side 2     
    0xa042, // 10: nop                    side 0     
    0x89e0, // 11: pull   ifempty block   side 1 [1] 
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program ws2812_program = {
    .instructions = ws2812_program_instructions,
    .length = 12,
    .origin = -1,
};

static inline pio_sm_config ws2812_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + ws2812_wrap_target, offset + ws2812_wrap);
    sm_config_set_sideset(&c, 2, false, false);
    return c;
}
#endif

